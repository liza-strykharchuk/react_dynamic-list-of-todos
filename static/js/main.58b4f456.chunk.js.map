{"version":3,"sources":["components/utiles/FilterBy.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterBy","TodoList","todos","selectTodo","whenTodoShow","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","qerty","setQerty","filterBy","setFilterBy","value","onChange","event","target","All","Active","Completed","placeholder","name","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closedTodo","useState","user","setUser","useEffect","userId","href","email","App","setTodos","loading","setLoading","setSelectTodo","filerBy","setFilerBy","catch","Error","finally","filerTodos","newTodos","newQerty","toLowerCase","trim","filter","includes","getFilerTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58b4f456.chunk.js","sourcesContent":["export enum FilterBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectTodo: Todo | null;\n  whenTodoShow: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  whenTodoShow,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        { todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={cn({\n              'has-background-info-light': selectTodo?.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => whenTodoShow(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': selectTodo?.id !== todo.id,\n                    'fa-eye-slash': selectTodo?.id === todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { FilterBy } from '../utiles/FilterBy';\n\ninterface Props {\n  qerty: string;\n  setQerty: (qerty: string) => void;\n  filterBy: FilterBy;\n  setFilterBy: (filterBy: FilterBy) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  qerty,\n  setQerty,\n  filterBy,\n  setFilterBy,\n}) => {\n  const handleImputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQerty(event.target.value);\n  };\n\n  const handleFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterBy(event.target.value as FilterBy);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={handleFilter}\n          >\n            <option value={FilterBy.All}>All</option>\n            <option value={FilterBy.Active}>Active</option>\n            <option value={FilterBy.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          name=\"searchInput\"\n          value={qerty}\n          onChange={handleImputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {qerty && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"clear\"\n              onClick={() => setQerty('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  selectTodo: Todo;\n  closedTodo: (value: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectTodo,\n  closedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectTodo) {\n      getUser(selectTodo.userId)\n        .then(setUser);\n    }\n  }, [selectTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectTodo.completed\n                ? <strong className=\"has-text-seccess\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterBy } from './components/utiles/FilterBy';\n\nconst getFilerTodos = (\n  todos: Todo[],\n  qerty: string,\n  filterBy: FilterBy,\n) => {\n  let newTodos = [...todos];\n\n  if (qerty) {\n    const newQerty = qerty.toLowerCase().trim();\n\n    newTodos = newTodos.filter(todo => todo.title.toLowerCase().includes(newQerty));\n  }\n\n  switch (filterBy) {\n    case 'active':\n      return newTodos.filter(todo => !todo.completed);\n\n    case 'completed':\n      return newTodos.filter(todo => todo.completed);\n\n    default:\n      break;\n  }\n\n  return newTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectTodo, setSelectTodo] = useState<Todo | null >(null);\n  const [qerty, setQerty] = useState<string>('');\n  const [filerBy, setFilerBy] = useState(FilterBy.All);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .catch(() => {\n        throw new Error('Please try latter');\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filerTodos = getFilerTodos(todos, qerty, filerBy);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                qerty={qerty}\n                setQerty={setQerty}\n                filterBy={filerBy}\n                setFilterBy={setFilerBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filerTodos}\n                    selectTodo={selectTodo}\n                    whenTodoShow={setSelectTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectTodo && (\n        <TodoModal\n          closedTodo={setSelectTodo}\n          selectTodo={selectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}